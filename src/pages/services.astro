---
import BaseLayout from '../layouts/BaseLayout.astro';

import '../styles/services-styles.scss';

const pageTitle = "Diensten - Feline Consulting";
const pageType = "services"
---

<BaseLayout pageTitle={pageTitle} pageType={pageType}>
  <main class="services-page">
    <section class="services-intro">
      <h1 class="services-title">Onze diensten</h1>
      <p>
        Elk project bij Feline Consulting is op maat gemaakt. Of je nu een geboorte- of trouwkaart nodig hebt, een volledig brandingpakket of hulp bij drukwerk â€” we denken met je mee en zorgen voor een creatief en kwalitatief resultaat.
      </p>
    </section>

    <section class="services-grid">
      <div class="service-card">
        <h2>ðŸŽ¨ Grafisch ontwerp op maat</h2>
        <p>Van logo tot flyer â€” ontwerpen die opvallen en blijven hangen. We zorgen voor een uniek ontwerp dat past bij jouw stijl en doelgroep.</p>
      </div>

      <div class="service-card">
        <h2>ðŸ’Œ Geboorte- en huwelijksdrukwerk</h2>
        <p>Een bijzonder moment vraagt om een bijzonder ontwerp. We maken samen iets dat Ã©cht bij jullie past, van uitnodiging tot bedankkaartje.</p>
      </div>

      <div class="service-card">
        <h2>ðŸªª Branding voor starters</h2>
        <p>We helpen je om je merk visueel sterk te positioneren met een logo, kleurenpalet, typografie en eventueel drukwerk of social media templates.</p>
      </div>

      <div class="service-card">
        <h2>ðŸ§¾ Drukwerk & begeleiding</h2>
        <p>Wij denken met je mee van digitaal ontwerp tot drukwerk. Geen stress, enkel mooi afgewerkte resultaten.</p>
      </div>

      <div class="service-card">
        <h2>ðŸ“± Social media visuals</h2>
        <p>Laat je social posts er consistent en professioneel uitzien. Ideaal voor ondernemers die online willen opvallen.</p>
      </div>
    </section>
  </main>

  <script>
    const cards = document.querySelectorAll('.service-card');
  
    const observer = new IntersectionObserver(entries => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          // Stagger each card by 100ms
          setTimeout(() => {
            entry.target.classList.add('visible');
          }, index * 100);
  
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });
  
    cards.forEach(card => observer.observe(card));
  </script>
</BaseLayout>


